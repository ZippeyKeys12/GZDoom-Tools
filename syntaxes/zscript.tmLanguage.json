{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"name": "ZScript",
	"patterns": [
		{
			"include": "#keywords"
		},
		{
			"include": "#strings"
		}
	],
	"repository": {
		"keywords": {
			"patterns": [
				{
					"name": "keyword.control.zscript",
					"match": "(#include)\\s+(\".*\")",
					"captures": {
						"1": {
							"name": "meta.preprocessor.string.zscript"
						},
						"2": {
							"name": "string.quoted.double.zscript"
						}
					}
				},
				{
					"name": "keyword.control.zscript",
					"match": "\\b(?i)(if|else|switch|case|while|until|do|for|continue|break|return|default|super|new)\\b"
				},
				{
					"name": "storage.modifier.zscript",
					"match": "\\b(?i)(extend|private|protected|static|ui|play|clearscope|(virtual(scope)?)|meta|transient|readonly|override|final|action|deprecated|vararg|native|version)\\b"
				},
				{
					"contentName": "entity.name.class.zscript",
					"begin": "(?i)(class|struct|enum)",
					"end": "(\\w+)\\W|<",
					"beginCaptures": {
						"1": {
							"name": "keyword.control.zscript"
						}
					},
					"endCaptures": {
						"1": {
							"name": "entity.name.class.zscript"
						}
					}
				},
				{
					"match": "(\\w+)\\s*\\((.|\\s)*\\)",
					"captures": {
						"1": {
							"name": "entity.name.function.zscript"
						}
					}
				},
				{
					"name": "keyword.operator.zscript",
					"match": "\\+|\\-|\\*|\\\\|%|<<<?|>>>?|\\.\\.|<=?|>=?|==?|~|\\&|\\|"
				},
				{
					"name": "keyword.operator.zscript",
					"match": "\\b(?i)(cross|dot|(size|align)of)\\b"
				},
				{
					"name": "storage.type.zscript",
					"match": "\\b(?i)(property|const|let|void|bool|(u?int(8|16)?)|(float(32|64)?)|double|string|name|color|(vector(2|3))|sound|((texture|sprite)id)|(state(label)?)|array)\\b"
				},
				{
					"name": "constant.numeric.zscript",
					"match": "\\b([0-9]+(\\.[0-9]+)?)\\b"
				},
				{
					"name": "constant.numeric.zscript",
					"match": "\\b0x([0-9]|[A-F]|[a-f])+\\b"
				},
				{
					"name": "constant.other.zscript",
					"match": "\\b(?i)(null|true|false)\\b"
				}
			]
		},
		"strings": {
			"patterns": [
				{
					"name": "string.quoted.double.zscript",
					"begin": "\"",
					"end": "\"",
					"patterns": [{
							"name": "constant.character.escape.zscript",
							"match": "\\\\."
					}]
				},
				{
					"name": "string.quoted.single.zscript",
					"begin": "'",
					"end": "'"
				},
				{
					"name": "comment.block.documentation.zscript",
					"begin": "\/\\*\\*",
					"end": "\\*\/"
				},
				{
					"name": "comment.block.zscript",
					"begin": "\/\\*",
					"end": "\\*\/"
				},
				{
					"name": "comment.line.double-slash.zscript",
					"begin": "\/\/",
					"end": "\n"
				}
			]
		}
	},
	"scopeName": "source.zscript"
}